/**
 * File:    test.cga
 * Created: 10 Nov 2015 15:06:49 GMT
 * Author:  jach8137
 */


version "2014.0"


wall_tex 		= "facade/walls/bricks.jpg"
dirt_tex		= "facade/walls/stucco.jpg"

attr buildingH = 27  

attr floorH = 3.5

attr tileW = 4
attr wallW = 0.5

@handle(shape=Window, anker=Tile, reference=origin, align=right, occlusion=false )
attr windowW = 2.2

@handle(shape=Window, anker=Tile, reference=origin, align=right, occlusion=false )
attr windowH = 1


@handle(shape=WallTex, anker=Tile, reference=origin, align=right, occlusion=false )
attr ColorizeWall		= "#FCEFE2"

Lot --> Lot2

Lot2 -->
	extrude(buildingH)  BuildingA// extrude the building
	
BuildingA -->
	comp(f){ front: Facade 
		   | back : Facade 
		   | left : Facade 		# instead of using "side" as selector, we use "left" and ..
		   | right: Facade 		# .. "right" so that we can differentiate later (needed for the cornice)
		   | top  : Roof }
		   
Facade -->
	split(y){~floorH:LedgeBase}*
	
Floor --> split(x){tileW:Tile(split.index)}*

Tile(index) --> split(x){~wallW : RWall | ~windowW:WindowTile(index) | ~wallW:LWall}

WindowTile(index) --> split(y){~wallW: Wall | windowH:Window | ~wallW:Wall}

Window -->
		s('1,'1,0.15) i("facade/windows/win.single.05.sashwindow.obj")
		Tex("facade/windows/windowTiles_2000x256.jpg",floor(rand(0,9.99)),10)

Tex(image,nbr,nTiles) -->
	tileUV(0,'nTiles,'1) translateUV(0,-nbr/nTiles,0)
	texture(image)
	set(material.specular.r,0.8) set(material.specular.g,0.8) set(material.specular.b,0.8)
	set(material.specularmap,image)
	set(material.shininess,20) set(material.reflectivity,0.3)

	
LedgeBase --> split(y){floorH-0.2:Floor | ~0.2:Ledge}

Ledge --> extrude(0.25) Ledge2

Ledge2 --> comp(f){ front: Wall 
		   | back : Wall 
		   | left : Wall 		# instead of using "side" as selector, we use "left" and ..
		   | right: Wall 		# .. "right" so that we can differentiate later (needed for the cornice)
		   | top  : Wall }

# ----------------------------------------
# Wall
# ----------------------------------------

LWall --> split(x){~wallW/2:Wall | ~wallW/2:Ledge}

RWall --> split(x){~wallW/2:Ledge | ~wallW/2:Wall}

Wall --> WallTex
	
WallTex -->
	color(ColorizeWall)
	texture(wall_tex)  
	set(material.dirtmap, dirt_tex)
	projectUV(0) projectUV(2)
	
		